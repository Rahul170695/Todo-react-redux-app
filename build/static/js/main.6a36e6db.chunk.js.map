{"version":3,"sources":["Components/ToDoList.module.css","Components/Header.module.css","UI/ErrorModal.module.css","Components/Advice.module.css","UI/Card.module.css","Components/ToDoContainer.module.css","Store/ToDo-slice.js","Store/index.js","Assets/TODO-image.jpg","Assets/background.jpg","Components/Header.js","UI/Button.js","Components/ToDoList.js","UI/Card.js","UI/ErrorModal.js","Components/ToDoContainer.js","Assets/icon-dice.svg","Components/Advice.js","App.js","index.js"],"names":["module","exports","ToDoSlice","createSlice","name","initialState","addToDo","text","editTodo","onClear","reducers","userInput","state","action","payload","value","addItemToList","newTask","id","Math","random","toString","task","push","newEditedTask","console","log","original","editedTodo","findIndex","item","splice","deleteList","filter","editList","editedList","find","todo","clearList","clearAll","ToDoSliceActions","actions","store","configureStore","reducer","toDo","Header","useSelector","length","className","classes","parentTitle","media","srcSet","full","src","half","alt","title","todoNumber","IconLabelButtons","props","ColorButton","styled","Button","color","theme","palette","getContrastText","indigo","backgroundColor","Stack","direction","spacing","variant","startIcon","onClick","ToDoList","todos","dispatch","useDispatch","card","map","list","lists","editIcon","delete","clearCard","Card","class","children","Backdrop","backdrop","onBackdropClick","Modal","onClearAll","ErrorModal","ReactDOM","createPortal","document","getElementById","ToDoContainer","useState","isValid","setIsValid","todoAdd","onSubmit","event","preventDefault","type","placeholder","onChange","target","trim","maxLength","disabled","Advice","myAdvice","setMyAdvice","isLoading","setIsLoading","error","setError","adviceHandler","useCallback","a","fetch","response","ok","Error","json","data","transformedAdvice","slip","advice","message","useEffect","content","style","container","dice","App","clear","render"],"mappings":"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","file":"static/js/main.6a36e6db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ToDoList_card___iJQp\",\"lists\":\"ToDoList_lists__3-Fsd\",\"list\":\"ToDoList_list__20BG0\",\"delete\":\"ToDoList_delete__3dXOR\",\"editIcon\":\"ToDoList_editIcon__120sn\",\"clearCard\":\"ToDoList_clearCard__2LyTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentTitle\":\"Header_parentTitle__2CVnD\",\"title\":\"Header_title__2bFj7\",\"todoNumber\":\"Header_todoNumber__20_av\",\"image\":\"Header_image__26CZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3P7vU\",\"card\":\"ErrorModal_card__Qkugi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Advice_container__IVxJZ\",\"dice\":\"Advice_dice__1BAG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1fivg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ToDoContainer_card__l7oef\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { original } from 'immer';\r\n\r\n\r\nconst ToDoSlice = createSlice({\r\n    name: 'add',\r\n    initialState: {\r\n        addToDo: [],\r\n        text: \"\",\r\n        editTodo: null,\r\n        onClear: false,\r\n    },\r\n    reducers: {\r\n        userInput(state, action) {\r\n            state.text = action.payload.value;\r\n        },\r\n        addItemToList(state, action) {\r\n            if (state.editTodo === null) {\r\n                const newTask = {\r\n                    id: Math.random().toString(),\r\n                    name: action.payload.task,\r\n                }\r\n                state.addToDo.push(newTask);\r\n            } else {\r\n                const newEditedTask = { ...state.editTodo, name: action.payload.task };\r\n                state.editTodo = newEditedTask;\r\n                console.log(state.editTodo);\r\n                console.log(original(state.addToDo));\r\n                const editedTodo = state.addToDo.findIndex((item)=> item.id === state.editTodo.id)\r\n                console.log((editedTodo))\r\n                state.addToDo.splice(editedTodo, 1, state.editTodo);\r\n            }\r\n            state.editTodo= null;\r\n            state.text = \"\";\r\n        },\r\n        deleteList(state, action) {\r\n            state.addToDo = state.addToDo.filter((item) => item.id !== action.payload.id);\r\n            //return state.addToDo.filter((item) => item.id !== action.payload.id);\r\n        },\r\n        editList(state, action) {\r\n            const editedList = state.addToDo.find((todo) => todo.id === action.payload.id);\r\n            state.text = editedList.name;\r\n            state.editTodo = editedList;\r\n        },\r\n        clearList(state){\r\n            state.onClear = !state.onClear;\r\n        },\r\n        clearAll(state){\r\n            state.addToDo = [];\r\n            state.onClear = !state.onClear;\r\n        }\r\n\r\n    }\r\n});\r\n\r\nexport const ToDoSliceActions = ToDoSlice.actions;\r\n\r\nexport default ToDoSlice;","import {configureStore} from '@reduxjs/toolkit';\r\n\r\nimport ToDoSlice from './ToDo-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: {toDo : ToDoSlice.reducer}\r\n});\r\n\r\nexport default store;\r\n\r\n","export default __webpack_public_path__ + \"static/media/TODO-image.3508d620.jpg\";","export default __webpack_public_path__ + \"static/media/background.90a41766.jpg\";","//import Card from '../UI/Card';\r\nimport classes from './Header.module.css';\r\nimport half from '../Assets/TODO-image.jpg';\r\nimport full from '../Assets/background.jpg';\r\n// import { useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Header = () => {\r\n\r\n  // const [src, setSrc] = useState('');\r\n\r\n  // const onLoadHandler = (event) => {\r\n  //   setSrc(event.target.currentSrc);\r\n  // }\r\n\r\n  const todo = useSelector(state => state.toDo.addToDo.length);\r\n  return (\r\n    // <div className={classes.heading} >\r\n    //   <h1 className={classes.content} >TODO</h1>\r\n    // </div>\r\n    <div className={classes.parentTitle} >\r\n      {/* <img src={image} alt=\"TODO\"/> */}\r\n      {/* <img src={full} srcSet={`${full} 500px, ${half} 900px`} alt=\"TODO\"  /> */}\r\n      <picture>\r\n        <source media=\"(max-width: 900px)\" srcSet={full} />\r\n        {/* <source media=\"(max-width: 480px)\" srcSet={half} /> */}\r\n              <img src={half} alt=\"TODO\" />\r\n        {/* <img src={half} alt=\"todo\" /> */}\r\n      </picture>\r\n      <h1 className={classes.title} >TODO</h1>\r\n      {todo > 0 && <p className={classes.todoNumber}>You have {todo} task to complete!</p>}\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Header;\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Stack from '@mui/material/Stack';\r\nimport { indigo } from '@mui/material/colors';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nexport default function IconLabelButtons(props) {\r\n\r\n    const ColorButton = styled(Button)(({ theme }) => ({\r\n        color: theme.palette.getContrastText(indigo[900]),\r\n        backgroundColor: indigo[500],\r\n        '&:hover': {\r\n          backgroundColor: indigo[700],\r\n        },\r\n      }));\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <ColorButton variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />} onClick={props.onClick} >\r\n        Clear\r\n      </ColorButton>\r\n    </Stack>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport classes from './ToDoList.module.css';\r\nimport Button from '../UI/Button';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ToDoSliceActions } from '../Store/ToDo-slice';\r\n\r\nconst ToDoList = (props) => {\r\n    const todos = useSelector(state =>  state.toDo.addToDo);\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(ToDoSliceActions.deleteList({ id: id }));\r\n    }\r\n\r\n    const editHandler = (id) => {\r\n        dispatch(ToDoSliceActions.editList({ id: id }));\r\n    }\r\n    const onClearHandler =()=>{\r\n        dispatch(ToDoSliceActions.clearList());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.card} >\r\n            {todos.map((list) => {\r\n                return (\r\n                    <li className={classes.lists} key={list.id} >\r\n                        <div className={classes.list} >\r\n                            {list.name}\r\n                        </div>\r\n                        <EditIcon className={classes.editIcon} onClick={() => { editHandler(list.id) }} />\r\n                        <DeleteIcon className={classes.delete} onClick={() => { deleteHandler(list.id) }}\r\n                        />\r\n                    </li>\r\n                )\r\n            })}\r\n            {todos.length > 1 &&\r\n                <div className={classes.clearCard} >\r\n                    <Button onClick={onClearHandler} />\r\n                </div>}\r\n        </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className={`${props.class} ${classes.card} ${props.className}`} onClick={props.onClick} > {props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Card from './Card';\r\nimport classes from './ErrorModal.module.css';\r\n\r\n\r\nconst Backdrop = (props) => {\r\n    return (\r\n        <div className={classes.backdrop} onClick={props.onBackdropClick} />\r\n    );\r\n}\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Card className={classes.card} >\r\n            <header>\r\n                <h2>Clear ToDo</h2>\r\n            </header>\r\n            <div>\r\n                <p>Do you want to Clear all ToDo tasks!</p>\r\n            </div>\r\n            <footer>\r\n                <button onClick={props.onClearAll} >Confirm</button>\r\n            </footer>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        //     <div className={classes.backdrop} onClick={props.onBackdropClick} >\r\n        // <Card className={classes.card} >\r\n        //     <header>\r\n        //         <h2>Clear ToDo</h2>\r\n        //     </header>\r\n        //     <div>\r\n        //         <p>Do you want to Clear all ToDo tasks!</p>\r\n        //     </div>\r\n        //     <footer>\r\n        //         <button onClick={props.onClearAll} >Confirm</button>\r\n        //     </footer>\r\n        // </Card>\r\n        // </div>\r\n        <>\r\n            {ReactDOM.createPortal(<Backdrop onBackdropClick={props.onBackdropClick} />, document.getElementById(\"backdrop\"))}\r\n            {ReactDOM.createPortal(<Modal onClearAll={props.onClearAll} />, document.getElementById(\"modal\"))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ToDoSliceActions } from '../Store/ToDo-slice';\r\nimport Card from '../UI/Card';\r\nimport classes from './ToDoContainer.module.css';\r\n\r\nconst ToDoContainer = (props) => {\r\n    const [isValid, setIsValid] = useState(false);\r\n    // const [inputAdd, setInputAdd] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const todoAdd = useSelector(state => state.toDo.text);\r\n    const editTodo = useSelector(state => state.toDo.editTodo);\r\n\r\n    const InputAddHandler = (event) => {\r\n        dispatch(ToDoSliceActions.userInput({ value: event.target.value }));\r\n        if (event.target.value.trim()) {\r\n            setIsValid(true);\r\n        }\r\n    }\r\n\r\n    const ToDoAddHandler = (event) => {\r\n        event.preventDefault();\r\n        dispatch(ToDoSliceActions.addItemToList({ task: todoAdd }));\r\n        setIsValid(false);\r\n        // if(editTodo){\r\n        //     dispatch(ToDoSliceActions.addItemToList({task: editTodo}));\r\n        // }else{\r\n        //     dispatch(ToDoSliceActions.addItemToList({task: todoAdd}));\r\n        // }\r\n        // setIsValid(false);\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.card} >\r\n            <form onSubmit={ToDoAddHandler} >\r\n                <input type=\"text\" placeholder=\"Start Adding\"\r\n                    onChange={InputAddHandler}\r\n                    value={todoAdd}\r\n                    maxLength=\"60\" \r\n                     />\r\n                <button type=\"submit\" disabled={!isValid} >{editTodo ? \"Update\" : \"Add\"}</button>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ToDoContainer;","export default __webpack_public_path__ + \"static/media/icon-dice.08691e4c.svg\";","import React, { useState, useEffect, useCallback } from 'react';\r\nimport classes from './Advice.module.css';\r\nimport dice from '../Assets/icon-dice.svg';\r\n\r\nconst Advice = () => {\r\n\r\n    const [myAdvice, setMyAdvice] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const adviceHandler = useCallback(async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('https://api.adviceslip.com/advice');\r\n            if(!response.ok){\r\n                throw new Error('Something Went Wrong...!');\r\n            }\r\n            const data = await response.json();\r\n\r\n            const transformedAdvice = data.slip.advice;\r\n            setMyAdvice(transformedAdvice);\r\n            setIsLoading(false);\r\n        } catch(error){\r\n            setError(error.message);\r\n         }\r\n         setIsLoading(false);\r\n    }, [])\r\n\r\n    useEffect(() => { adviceHandler() }, [adviceHandler]);\r\n\r\n\r\n    let content = <p>Special Advice is loading for you. Please wait...!</p>;\r\n\r\n    if(error){\r\n        content = <p>{error}</p>\r\n    }\r\n    if (myAdvice) {\r\n        content = <p>{myAdvice}</p>\r\n    }\r\n    \r\n    if (isLoading) {\r\n        content = <p style={{color: \"rgb(236, 109, 230)\"}}>Please wait...!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.container} >\r\n            <h1>Random Advice for you!</h1>\r\n            <section>{content}</section>\r\n            <br />\r\n            <img className={classes.dice} src={dice} onClick={adviceHandler} alt=\"Todo\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Advice;","import React from 'react';\r\nimport Header from './Components/Header';\r\nimport ToDoList from './Components/ToDoList';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport ToDoContainer from './Components/ToDoContainer';\r\nimport Advice from './Components/Advice';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ToDoSliceActions } from './Store/ToDo-slice';\r\n\r\nimport classes from './App.module.css';\r\n\r\nconst App = () => {\r\n\r\n  const clear = useSelector(state => state.toDo.onClear);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClearAllHandler = () => {\r\n    dispatch(ToDoSliceActions.clearAll())\r\n  }\r\n\r\n  const onBackdropClick = () => {\r\n    dispatch(ToDoSliceActions.clearList())\r\n  }\r\n  return (\r\n    <div className={classes.content} >\r\n      <Header />\r\n      <Advice />\r\n      <ToDoContainer />\r\n      <ToDoList />\r\n      {clear && <ErrorModal onClearAll={onClearAllHandler} onBackdropClick={onBackdropClick} />}</div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './Store/index';\n\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Provider store={store}><App /></Provider> , document.getElementById('root'));\n"],"sourceRoot":""}